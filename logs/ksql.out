Listening for transport dt_socket at address: 5005
SLF4J: A number (101) of logging calls during the initialization phase have been intercepted and are
SLF4J: now being replayed. These are subject to the filtering rules of the underlying logging system.
SLF4J: See also http://www.slf4j.org/codes.html#replay
Jul 02, 2019 5:22:52 PM org.glassfish.jersey.internal.inject.Providers checkProviderRuntime
WARNING: A provider io.confluent.ksql.rest.server.resources.streaming.StreamedQueryResource registered in SERVER runtime does not implement any provider interfaces applicable in the SERVER runtime. Due to constraint configuration problems the provider io.confluent.ksql.rest.server.resources.streaming.StreamedQueryResource will be ignored. 
Jul 02, 2019 5:22:52 PM org.glassfish.jersey.internal.inject.Providers checkProviderRuntime
WARNING: A provider io.confluent.ksql.rest.server.resources.StatusResource registered in SERVER runtime does not implement any provider interfaces applicable in the SERVER runtime. Due to constraint configuration problems the provider io.confluent.ksql.rest.server.resources.StatusResource will be ignored. 
Jul 02, 2019 5:22:52 PM org.glassfish.jersey.internal.inject.Providers checkProviderRuntime
WARNING: A provider io.confluent.ksql.rest.server.resources.ServerInfoResource registered in SERVER runtime does not implement any provider interfaces applicable in the SERVER runtime. Due to constraint configuration problems the provider io.confluent.ksql.rest.server.resources.ServerInfoResource will be ignored. 
Jul 02, 2019 5:22:52 PM org.glassfish.jersey.internal.inject.Providers checkProviderRuntime
WARNING: A provider io.confluent.ksql.rest.server.resources.KsqlResource registered in SERVER runtime does not implement any provider interfaces applicable in the SERVER runtime. Due to constraint configuration problems the provider io.confluent.ksql.rest.server.resources.KsqlResource will be ignored. 
Jul 02, 2019 5:22:52 PM org.glassfish.jersey.internal.inject.Providers checkProviderRuntime
WARNING: A provider io.confluent.ksql.rest.server.resources.RootDocument registered in SERVER runtime does not implement any provider interfaces applicable in the SERVER runtime. Due to constraint configuration problems the provider io.confluent.ksql.rest.server.resources.RootDocument will be ignored. 
Exception in thread "_confluent-ksql-default_query_CTAS_FOO2_9-4046b4bd-96aa-40ab-abe3-cdb5f68ddc70-StreamThread-3" Exception in thread "_confluent-ksql-default_query_CTAS_FOO3_10-a2456770-cc00-414d-b667-dd6e43d6f949-StreamThread-2" org.apache.kafka.common.errors.TimeoutException: Timeout of 60000ms expired before successfully committing offsets {pageviews-0=OffsetAndMetadata{offset=1011289, leaderEpoch=null, metadata=''}}
org.apache.kafka.common.errors.TimeoutException: Timeout of 60000ms expired before successfully committing offsets {pageviews-0=OffsetAndMetadata{offset=1011289, leaderEpoch=null, metadata=''}}
Exception in thread "_confluent-ksql-default_query_CSAS_PF_2-4545832f-4cb2-47e6-9bee-1b73c32f281d-StreamThread-3" org.apache.kafka.common.errors.TimeoutException: Timeout of 60000ms expired before successfully committing offsets {pageviews-0=OffsetAndMetadata{offset=1011289, leaderEpoch=null, metadata=''}}
Exception in thread "_confluent-ksql-default_query_CTAS_PAGEVIEWS_TABLE_11-8f6993a5-abf5-4dc2-9ef7-829dd4be8b44-StreamThread-3" org.apache.kafka.common.errors.TimeoutException: Timeout of 60000ms expired before successfully committing offsets {pageviews-0=OffsetAndMetadata{offset=1011289, leaderEpoch=null, metadata=''}}
Exception in thread "_confluent-ksql-default_query_CTAS_PTY_13-5c43301d-94b8-4d62-afd7-0afc5ae394f6-StreamThread-2" org.apache.kafka.common.errors.TimeoutException: Timeout of 60000ms expired before successfully committing offsets {pageviews-0=OffsetAndMetadata{offset=1011289, leaderEpoch=null, metadata=''}}
Exception in thread "_confluent-ksql-default_query_CTAS_PT_12-fa18b402-8a97-4ecb-abd5-879a241efb5f-StreamThread-3" org.apache.kafka.streams.errors.StreamsException: task [0_0] Abort sending since an error caught with a previous record (key 64001|+|User_9|+|Page_67 value [ 64001 | 'User_9' | 'Page_67' | 1562113552907 ] timestamp 1562113552907) to topic _confluent-ksql-default_query_CTAS_PT_12-Aggregate-groupby-repartition due to org.apache.kafka.common.errors.TimeoutException: Expiring 2 record(s) for _confluent-ksql-default_query_CTAS_PT_12-Aggregate-groupby-repartition-0:10800463 ms has passed since batch creation
You can increase producer parameter `retries` and `retry.backoff.ms` to avoid this error.
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl.recordSendError(RecordCollectorImpl.java:138)
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl.access$500(RecordCollectorImpl.java:50)
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl$1.onCompletion(RecordCollectorImpl.java:201)
	at org.apache.kafka.clients.producer.KafkaProducer$InterceptorCallback.onCompletion(KafkaProducer.java:1318)
	at org.apache.kafka.clients.producer.internals.ProducerBatch.completeFutureAndFireCallbacks(ProducerBatch.java:230)
	at org.apache.kafka.clients.producer.internals.ProducerBatch.done(ProducerBatch.java:196)
	at org.apache.kafka.clients.producer.internals.Sender.failBatch(Sender.java:720)
	at org.apache.kafka.clients.producer.internals.Sender.sendProducerData(Sender.java:387)
	at org.apache.kafka.clients.producer.internals.Sender.runOnce(Sender.java:330)
	at org.apache.kafka.clients.producer.internals.Sender.run(Sender.java:238)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.kafka.common.errors.TimeoutException: Expiring 2 record(s) for _confluent-ksql-default_query_CTAS_PT_12-Aggregate-groupby-repartition-0:10800463 ms has passed since batch creation
Exception in thread "_confluent-ksql-default_query_CTAS_FOO1_8-56dcdce8-faa4-481b-a4a3-32377583b17a-StreamThread-3" org.apache.kafka.streams.errors.StreamsException: task [1_0] Abort sending since an error caught with a previous record (key User_1 value [B@389aab91 timestamp 1562113552662) to topic _confluent-ksql-default_query_CTAS_FOO1_8-Aggregate-aggregate-changelog due to org.apache.kafka.common.errors.NetworkException: The server disconnected before a response was received.
You can increase producer parameter `retries` and `retry.backoff.ms` to avoid this error.
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl.recordSendError(RecordCollectorImpl.java:138)
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl.access$500(RecordCollectorImpl.java:50)
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl$1.onCompletion(RecordCollectorImpl.java:201)
	at org.apache.kafka.clients.producer.KafkaProducer$InterceptorCallback.onCompletion(KafkaProducer.java:1318)
	at org.apache.kafka.clients.producer.internals.ProducerBatch.completeFutureAndFireCallbacks(ProducerBatch.java:230)
	at org.apache.kafka.clients.producer.internals.ProducerBatch.done(ProducerBatch.java:196)
	at org.apache.kafka.clients.producer.internals.Sender.failBatch(Sender.java:720)
	at org.apache.kafka.clients.producer.internals.Sender.failBatch(Sender.java:706)
	at org.apache.kafka.clients.producer.internals.Sender.completeBatch(Sender.java:663)
	at org.apache.kafka.clients.producer.internals.Sender.handleProduceResponse(Sender.java:570)
	at org.apache.kafka.clients.producer.internals.Sender.access$100(Sender.java:73)
	at org.apache.kafka.clients.producer.internals.Sender$1.onComplete(Sender.java:789)
	at org.apache.kafka.clients.ClientResponse.onComplete(ClientResponse.java:109)
	at org.apache.kafka.clients.NetworkClient.completeResponses(NetworkClient.java:561)
	at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:553)
	at org.apache.kafka.clients.producer.internals.Sender.runOnce(Sender.java:331)
	at org.apache.kafka.clients.producer.internals.Sender.run(Sender.java:238)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.kafka.common.errors.NetworkException: The server disconnected before a response was received.
Exception in thread "_confluent-ksql-default_query_CTAS_PT_12-fa18b402-8a97-4ecb-abd5-879a241efb5f-StreamThread-4" org.apache.kafka.streams.errors.StreamsException: task [1_0] Abort sending since an error caught with a previous record (key 63781|+|User_4|+|Page_68 value [ 63781 | 'User_4' | 'Page_68' | 1 ] timestamp 1562113551607) to topic PT due to org.apache.kafka.common.errors.NetworkException: The server disconnected before a response was received.
You can increase producer parameter `retries` and `retry.backoff.ms` to avoid this error.
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl.recordSendError(RecordCollectorImpl.java:138)
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl.access$500(RecordCollectorImpl.java:50)
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl$1.onCompletion(RecordCollectorImpl.java:201)
	at org.apache.kafka.clients.producer.KafkaProducer$InterceptorCallback.onCompletion(KafkaProducer.java:1318)
	at org.apache.kafka.clients.producer.internals.ProducerBatch.completeFutureAndFireCallbacks(ProducerBatch.java:230)
	at org.apache.kafka.clients.producer.internals.ProducerBatch.done(ProducerBatch.java:196)
	at org.apache.kafka.clients.producer.internals.Sender.failBatch(Sender.java:720)
	at org.apache.kafka.clients.producer.internals.Sender.failBatch(Sender.java:706)
	at org.apache.kafka.clients.producer.internals.Sender.completeBatch(Sender.java:663)
	at org.apache.kafka.clients.producer.internals.Sender.handleProduceResponse(Sender.java:570)
	at org.apache.kafka.clients.producer.internals.Sender.access$100(Sender.java:73)
	at org.apache.kafka.clients.producer.internals.Sender$1.onComplete(Sender.java:789)
	at org.apache.kafka.clients.ClientResponse.onComplete(ClientResponse.java:109)
	at org.apache.kafka.clients.NetworkClient.completeResponses(NetworkClient.java:561)
	at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:553)
	at org.apache.kafka.clients.producer.internals.Sender.runOnce(Sender.java:331)
	at org.apache.kafka.clients.producer.internals.Sender.run(Sender.java:238)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.kafka.common.errors.NetworkException: The server disconnected before a response was received.
Exception in thread "_confluent-ksql-default_query_CTAS_MMMMM_6-0558f124-97b3-44f4-b49f-df63d9ab65dc-StreamThread-1" org.apache.kafka.streams.errors.StreamsException: task [0_0] Abort sending since an error caught with a previous record (key User_1 value [B@215f3e8d timestamp 1562113552563) to topic _confluent-ksql-default_query_CTAS_MMMMM_6-KsqlTopic-reduce-changelog due to org.apache.kafka.common.errors.NetworkException: The server disconnected before a response was received.
You can increase producer parameter `retries` and `retry.backoff.ms` to avoid this error.
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl.recordSendError(RecordCollectorImpl.java:138)
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl.access$500(RecordCollectorImpl.java:50)
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl$1.onCompletion(RecordCollectorImpl.java:201)
	at org.apache.kafka.clients.producer.KafkaProducer$InterceptorCallback.onCompletion(KafkaProducer.java:1318)
	at org.apache.kafka.clients.producer.internals.ProducerBatch.completeFutureAndFireCallbacks(ProducerBatch.java:230)
	at org.apache.kafka.clients.producer.internals.ProducerBatch.done(ProducerBatch.java:196)
	at org.apache.kafka.clients.producer.internals.Sender.failBatch(Sender.java:720)
	at org.apache.kafka.clients.producer.internals.Sender.failBatch(Sender.java:706)
	at org.apache.kafka.clients.producer.internals.Sender.completeBatch(Sender.java:663)
	at org.apache.kafka.clients.producer.internals.Sender.handleProduceResponse(Sender.java:570)
	at org.apache.kafka.clients.producer.internals.Sender.access$100(Sender.java:73)
	at org.apache.kafka.clients.producer.internals.Sender$1.onComplete(Sender.java:789)
	at org.apache.kafka.clients.ClientResponse.onComplete(ClientResponse.java:109)
	at org.apache.kafka.clients.NetworkClient.completeResponses(NetworkClient.java:561)
	at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:553)
	at org.apache.kafka.clients.producer.internals.Sender.runOnce(Sender.java:331)
	at org.apache.kafka.clients.producer.internals.Sender.run(Sender.java:238)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.kafka.common.errors.NetworkException: The server disconnected before a response was received.
Exception in thread "_confluent-ksql-default_query_CTAS_PTY_13-5c43301d-94b8-4d62-afd7-0afc5ae394f6-StreamThread-3" org.apache.kafka.streams.errors.StreamsException: task [1_0] Abort sending since an error caught with a previous record (key 63751|+|User_5|+|Page_16 value [B@6157b7de timestamp 1562113551471) to topic _confluent-ksql-default_query_CTAS_PTY_13-Aggregate-aggregate-changelog due to org.apache.kafka.common.errors.NetworkException: The server disconnected before a response was received.
You can increase producer parameter `retries` and `retry.backoff.ms` to avoid this error.
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl.recordSendError(RecordCollectorImpl.java:138)
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl.access$500(RecordCollectorImpl.java:50)
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl$1.onCompletion(RecordCollectorImpl.java:201)
	at org.apache.kafka.clients.producer.KafkaProducer$InterceptorCallback.onCompletion(KafkaProducer.java:1318)
	at org.apache.kafka.clients.producer.internals.ProducerBatch.completeFutureAndFireCallbacks(ProducerBatch.java:230)
	at org.apache.kafka.clients.producer.internals.ProducerBatch.done(ProducerBatch.java:196)
	at org.apache.kafka.clients.producer.internals.Sender.failBatch(Sender.java:720)
	at org.apache.kafka.clients.producer.internals.Sender.failBatch(Sender.java:706)
	at org.apache.kafka.clients.producer.internals.Sender.completeBatch(Sender.java:663)
	at org.apache.kafka.clients.producer.internals.Sender.handleProduceResponse(Sender.java:570)
	at org.apache.kafka.clients.producer.internals.Sender.access$100(Sender.java:73)
	at org.apache.kafka.clients.producer.internals.Sender$1.onComplete(Sender.java:789)
	at org.apache.kafka.clients.ClientResponse.onComplete(ClientResponse.java:109)
	at org.apache.kafka.clients.NetworkClient.completeResponses(NetworkClient.java:561)
	at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:553)
	at org.apache.kafka.clients.producer.internals.Sender.runOnce(Sender.java:331)
	at org.apache.kafka.clients.producer.internals.Sender.run(Sender.java:238)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.kafka.common.errors.NetworkException: The server disconnected before a response was received.
Exception in thread "_confluent-ksql-default_query_CSAS_PF_2-4545832f-4cb2-47e6-9bee-1b73c32f281d-StreamThread-2" org.apache.kafka.streams.errors.StreamsException: task [0_0] Abort sending since an error caught with a previous record (key User_1 value [B@5be410df timestamp 1562113552563) to topic _confluent-ksql-default_query_CSAS_PF_2-KafkaTopic_Right-reduce-changelog due to org.apache.kafka.common.errors.NetworkException: The server disconnected before a response was received.
You can increase producer parameter `retries` and `retry.backoff.ms` to avoid this error.
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl.recordSendError(RecordCollectorImpl.java:138)
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl.access$500(RecordCollectorImpl.java:50)
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl$1.onCompletion(RecordCollectorImpl.java:201)
	at org.apache.kafka.clients.producer.KafkaProducer$InterceptorCallback.onCompletion(KafkaProducer.java:1318)
	at org.apache.kafka.clients.producer.internals.ProducerBatch.completeFutureAndFireCallbacks(ProducerBatch.java:230)
	at org.apache.kafka.clients.producer.internals.ProducerBatch.done(ProducerBatch.java:196)
	at org.apache.kafka.clients.producer.internals.Sender.failBatch(Sender.java:720)
	at org.apache.kafka.clients.producer.internals.Sender.failBatch(Sender.java:706)
	at org.apache.kafka.clients.producer.internals.Sender.completeBatch(Sender.java:663)
	at org.apache.kafka.clients.producer.internals.Sender.handleProduceResponse(Sender.java:570)
	at org.apache.kafka.clients.producer.internals.Sender.access$100(Sender.java:73)
	at org.apache.kafka.clients.producer.internals.Sender$1.onComplete(Sender.java:789)
	at org.apache.kafka.clients.ClientResponse.onComplete(ClientResponse.java:109)
	at org.apache.kafka.clients.NetworkClient.completeResponses(NetworkClient.java:561)
	at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:553)
	at org.apache.kafka.clients.producer.internals.Sender.runOnce(Sender.java:331)
	at org.apache.kafka.clients.producer.internals.Sender.run(Sender.java:238)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.kafka.common.errors.NetworkException: The server disconnected before a response was received.
Exception in thread "_confluent-ksql-default_query_CTAS_MMM_5-0eb57d91-c3f2-485d-9658-a50c87108976-StreamThread-1" org.apache.kafka.streams.errors.StreamsException: task [0_0] Abort sending since an error caught with a previous record (key User_1 value [B@192b73dd timestamp 1562113552563) to topic _confluent-ksql-default_query_CTAS_MMM_5-KsqlTopic-reduce-changelog due to org.apache.kafka.common.errors.NetworkException: The server disconnected before a response was received.
You can increase producer parameter `retries` and `retry.backoff.ms` to avoid this error.
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl.recordSendError(RecordCollectorImpl.java:138)
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl.access$500(RecordCollectorImpl.java:50)
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl$1.onCompletion(RecordCollectorImpl.java:201)
	at org.apache.kafka.clients.producer.KafkaProducer$InterceptorCallback.onCompletion(KafkaProducer.java:1318)
	at org.apache.kafka.clients.producer.internals.ProducerBatch.completeFutureAndFireCallbacks(ProducerBatch.java:230)
	at org.apache.kafka.clients.producer.internals.ProducerBatch.done(ProducerBatch.java:196)
	at org.apache.kafka.clients.producer.internals.Sender.failBatch(Sender.java:720)
	at org.apache.kafka.clients.producer.internals.Sender.failBatch(Sender.java:706)
	at org.apache.kafka.clients.producer.internals.Sender.completeBatch(Sender.java:663)
	at org.apache.kafka.clients.producer.internals.Sender.handleProduceResponse(Sender.java:570)
	at org.apache.kafka.clients.producer.internals.Sender.access$100(Sender.java:73)
	at org.apache.kafka.clients.producer.internals.Sender$1.onComplete(Sender.java:789)
	at org.apache.kafka.clients.ClientResponse.onComplete(ClientResponse.java:109)
	at org.apache.kafka.clients.NetworkClient.completeResponses(NetworkClient.java:561)
	at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:553)
	at org.apache.kafka.clients.producer.internals.Sender.runOnce(Sender.java:331)
	at org.apache.kafka.clients.producer.internals.Sender.run(Sender.java:238)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.kafka.common.errors.NetworkException: The server disconnected before a response was received.
Exception in thread "_confluent-ksql-default_query_CTAS_SHU_7-4d102e1e-b8cf-456c-96b7-da0de51d4cbc-StreamThread-4" org.apache.kafka.streams.errors.StreamsException: task [0_0] Abort sending since an error caught with a previous record (key User_1 value [ 'User_1' | 'OTHER' ] timestamp 1562113552563) to topic SHU due to org.apache.kafka.common.errors.NetworkException: The server disconnected before a response was received.
You can increase producer parameter `retries` and `retry.backoff.ms` to avoid this error.
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl.recordSendError(RecordCollectorImpl.java:138)
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl.access$500(RecordCollectorImpl.java:50)
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl$1.onCompletion(RecordCollectorImpl.java:201)
	at org.apache.kafka.clients.producer.KafkaProducer$InterceptorCallback.onCompletion(KafkaProducer.java:1318)
	at org.apache.kafka.clients.producer.internals.ProducerBatch.completeFutureAndFireCallbacks(ProducerBatch.java:230)
	at org.apache.kafka.clients.producer.internals.ProducerBatch.done(ProducerBatch.java:196)
	at org.apache.kafka.clients.producer.internals.Sender.failBatch(Sender.java:720)
	at org.apache.kafka.clients.producer.internals.Sender.failBatch(Sender.java:706)
	at org.apache.kafka.clients.producer.internals.Sender.completeBatch(Sender.java:663)
	at org.apache.kafka.clients.producer.internals.Sender.handleProduceResponse(Sender.java:570)
	at org.apache.kafka.clients.producer.internals.Sender.access$100(Sender.java:73)
	at org.apache.kafka.clients.producer.internals.Sender$1.onComplete(Sender.java:789)
	at org.apache.kafka.clients.ClientResponse.onComplete(ClientResponse.java:109)
	at org.apache.kafka.clients.NetworkClient.completeResponses(NetworkClient.java:561)
	at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:553)
	at org.apache.kafka.clients.producer.internals.Sender.runOnce(Sender.java:331)
	at org.apache.kafka.clients.producer.internals.Sender.run(Sender.java:238)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.kafka.common.errors.NetworkException: The server disconnected before a response was received.
Exception in thread "_confluent-ksql-default_query_CTAS_FOO3_10-a2456770-cc00-414d-b667-dd6e43d6f949-StreamThread-1" org.apache.kafka.streams.errors.StreamsException: task [1_0] Abort sending since an error caught with a previous record (key User_6 value [B@24e982e2 timestamp 1562113551642) to topic _confluent-ksql-default_query_CTAS_FOO3_10-Aggregate-aggregate-changelog due to org.apache.kafka.common.errors.NetworkException: The server disconnected before a response was received.
You can increase producer parameter `retries` and `retry.backoff.ms` to avoid this error.
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl.recordSendError(RecordCollectorImpl.java:138)
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl.access$500(RecordCollectorImpl.java:50)
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl$1.onCompletion(RecordCollectorImpl.java:201)
	at org.apache.kafka.clients.producer.KafkaProducer$InterceptorCallback.onCompletion(KafkaProducer.java:1318)
	at org.apache.kafka.clients.producer.internals.ProducerBatch.completeFutureAndFireCallbacks(ProducerBatch.java:230)
	at org.apache.kafka.clients.producer.internals.ProducerBatch.done(ProducerBatch.java:196)
	at org.apache.kafka.clients.producer.internals.Sender.failBatch(Sender.java:720)
	at org.apache.kafka.clients.producer.internals.Sender.failBatch(Sender.java:706)
	at org.apache.kafka.clients.producer.internals.Sender.completeBatch(Sender.java:663)
	at org.apache.kafka.clients.producer.internals.Sender.handleProduceResponse(Sender.java:570)
	at org.apache.kafka.clients.producer.internals.Sender.access$100(Sender.java:73)
	at org.apache.kafka.clients.producer.internals.Sender$1.onComplete(Sender.java:789)
	at org.apache.kafka.clients.ClientResponse.onComplete(ClientResponse.java:109)
	at org.apache.kafka.clients.NetworkClient.completeResponses(NetworkClient.java:561)
	at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:553)
	at org.apache.kafka.clients.producer.internals.Sender.runOnce(Sender.java:331)
	at org.apache.kafka.clients.producer.internals.Sender.run(Sender.java:238)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.kafka.common.errors.NetworkException: The server disconnected before a response was received.
Exception in thread "_confluent-ksql-default_query_CTAS_FOO2_9-4046b4bd-96aa-40ab-abe3-cdb5f68ddc70-StreamThread-1" org.apache.kafka.streams.errors.StreamsException: task [1_0] Abort sending since an error caught with a previous record (key User_6 value [ 'User_6' | 10240 ] timestamp 1562113551642) to topic FOO2 due to org.apache.kafka.common.errors.NetworkException: The server disconnected before a response was received.
You can increase producer parameter `retries` and `retry.backoff.ms` to avoid this error.
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl.recordSendError(RecordCollectorImpl.java:138)
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl.access$500(RecordCollectorImpl.java:50)
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl$1.onCompletion(RecordCollectorImpl.java:201)
	at org.apache.kafka.clients.producer.KafkaProducer$InterceptorCallback.onCompletion(KafkaProducer.java:1318)
	at org.apache.kafka.clients.producer.internals.ProducerBatch.completeFutureAndFireCallbacks(ProducerBatch.java:230)
	at org.apache.kafka.clients.producer.internals.ProducerBatch.done(ProducerBatch.java:196)
	at org.apache.kafka.clients.producer.internals.Sender.failBatch(Sender.java:720)
	at org.apache.kafka.clients.producer.internals.Sender.failBatch(Sender.java:706)
	at org.apache.kafka.clients.producer.internals.Sender.completeBatch(Sender.java:663)
	at org.apache.kafka.clients.producer.internals.Sender.handleProduceResponse(Sender.java:570)
	at org.apache.kafka.clients.producer.internals.Sender.access$100(Sender.java:73)
	at org.apache.kafka.clients.producer.internals.Sender$1.onComplete(Sender.java:789)
	at org.apache.kafka.clients.ClientResponse.onComplete(ClientResponse.java:109)
	at org.apache.kafka.clients.NetworkClient.completeResponses(NetworkClient.java:561)
	at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:553)
	at org.apache.kafka.clients.producer.internals.Sender.runOnce(Sender.java:331)
	at org.apache.kafka.clients.producer.internals.Sender.run(Sender.java:238)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.kafka.common.errors.NetworkException: The server disconnected before a response was received.
Exception in thread "_confluent-ksql-default_query_CTAS_PTTY_14-9afa1248-415f-4b53-98c9-be4a37cd1aed-StreamThread-4" org.apache.kafka.streams.errors.StreamsException: task [0_0] Abort sending since an error caught with a previous record (key 64001|+|User_9|+|Page_67 value [ 64001 | 'User_9' | 'Page_67' | 1562113552907 ] timestamp 1562113552907) to topic _confluent-ksql-default_query_CTAS_PTTY_14-Aggregate-groupby-repartition due to org.apache.kafka.common.errors.TimeoutException: Expiring 2 record(s) for _confluent-ksql-default_query_CTAS_PTTY_14-Aggregate-groupby-repartition-0:10800463 ms has passed since batch creation
You can increase producer parameter `retries` and `retry.backoff.ms` to avoid this error.
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl.recordSendError(RecordCollectorImpl.java:138)
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl.access$500(RecordCollectorImpl.java:50)
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl$1.onCompletion(RecordCollectorImpl.java:201)
	at org.apache.kafka.clients.producer.KafkaProducer$InterceptorCallback.onCompletion(KafkaProducer.java:1318)
	at org.apache.kafka.clients.producer.internals.ProducerBatch.completeFutureAndFireCallbacks(ProducerBatch.java:230)
	at org.apache.kafka.clients.producer.internals.ProducerBatch.done(ProducerBatch.java:196)
	at org.apache.kafka.clients.producer.internals.Sender.failBatch(Sender.java:720)
	at org.apache.kafka.clients.producer.internals.Sender.sendProducerData(Sender.java:387)
	at org.apache.kafka.clients.producer.internals.Sender.runOnce(Sender.java:330)
	at org.apache.kafka.clients.producer.internals.Sender.run(Sender.java:238)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.kafka.common.errors.TimeoutException: Expiring 2 record(s) for _confluent-ksql-default_query_CTAS_PTTY_14-Aggregate-groupby-repartition-0:10800463 ms has passed since batch creation
Exception in thread "_confluent-ksql-default_query_CTAS_FOO1_8-56dcdce8-faa4-481b-a4a3-32377583b17a-StreamThread-2" org.apache.kafka.streams.errors.StreamsException: task [0_0] Abort sending since an error caught with a previous record (key User_9 value [ 'User_9' | 1562113552907 ] timestamp 1562113552907) to topic _confluent-ksql-default_query_CTAS_FOO1_8-Aggregate-groupby-repartition due to org.apache.kafka.common.errors.TimeoutException: Expiring 2 record(s) for _confluent-ksql-default_query_CTAS_FOO1_8-Aggregate-groupby-repartition-0:10800447 ms has passed since batch creation
You can increase producer parameter `retries` and `retry.backoff.ms` to avoid this error.
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl.recordSendError(RecordCollectorImpl.java:138)
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl.access$500(RecordCollectorImpl.java:50)
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl$1.onCompletion(RecordCollectorImpl.java:201)
	at org.apache.kafka.clients.producer.KafkaProducer$InterceptorCallback.onCompletion(KafkaProducer.java:1318)
	at org.apache.kafka.clients.producer.internals.ProducerBatch.completeFutureAndFireCallbacks(ProducerBatch.java:230)
	at org.apache.kafka.clients.producer.internals.ProducerBatch.done(ProducerBatch.java:196)
	at org.apache.kafka.clients.producer.internals.Sender.failBatch(Sender.java:720)
	at org.apache.kafka.clients.producer.internals.Sender.sendProducerData(Sender.java:387)
	at org.apache.kafka.clients.producer.internals.Sender.runOnce(Sender.java:330)
	at org.apache.kafka.clients.producer.internals.Sender.run(Sender.java:238)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.kafka.common.errors.TimeoutException: Expiring 2 record(s) for _confluent-ksql-default_query_CTAS_FOO1_8-Aggregate-groupby-repartition-0:10800447 ms has passed since batch creation
Exception in thread "_confluent-ksql-default_query_CTAS_PAGEVIEWS_TABLE_11-8f6993a5-abf5-4dc2-9ef7-829dd4be8b44-StreamThread-2" org.apache.kafka.streams.errors.StreamsException: task [1_0] Abort sending since an error caught with a previous record (key 63811|+|User_8|+|Page_20 value [B@100303b8 timestamp 1562113551740) to topic _confluent-ksql-default_query_CTAS_PAGEVIEWS_TABLE_11-Aggregate-aggregate-changelog due to org.apache.kafka.common.errors.NetworkException: The server disconnected before a response was received.
You can increase producer parameter `retries` and `retry.backoff.ms` to avoid this error.
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl.recordSendError(RecordCollectorImpl.java:138)
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl.access$500(RecordCollectorImpl.java:50)
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl$1.onCompletion(RecordCollectorImpl.java:201)
	at org.apache.kafka.clients.producer.KafkaProducer$InterceptorCallback.onCompletion(KafkaProducer.java:1318)
	at org.apache.kafka.clients.producer.internals.ProducerBatch.completeFutureAndFireCallbacks(ProducerBatch.java:230)
	at org.apache.kafka.clients.producer.internals.ProducerBatch.done(ProducerBatch.java:196)
	at org.apache.kafka.clients.producer.internals.Sender.failBatch(Sender.java:720)
	at org.apache.kafka.clients.producer.internals.Sender.failBatch(Sender.java:706)
	at org.apache.kafka.clients.producer.internals.Sender.completeBatch(Sender.java:663)
	at org.apache.kafka.clients.producer.internals.Sender.handleProduceResponse(Sender.java:570)
	at org.apache.kafka.clients.producer.internals.Sender.access$100(Sender.java:73)
	at org.apache.kafka.clients.producer.internals.Sender$1.onComplete(Sender.java:789)
	at org.apache.kafka.clients.ClientResponse.onComplete(ClientResponse.java:109)
	at org.apache.kafka.clients.NetworkClient.completeResponses(NetworkClient.java:561)
	at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:553)
	at org.apache.kafka.clients.producer.internals.Sender.runOnce(Sender.java:331)
	at org.apache.kafka.clients.producer.internals.Sender.run(Sender.java:238)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.kafka.common.errors.NetworkException: The server disconnected before a response was received.
Exception in thread "_confluent-ksql-default_query_CTAS_NANA_4-9d75f7bc-a3d2-4e15-bd7d-5636de673f66-StreamThread-3" org.apache.kafka.streams.errors.StreamsException: task [0_0] Abort sending since an error caught with a previous record (key User_1 value null timestamp 1562113552563) to topic NANA due to org.apache.kafka.common.errors.NetworkException: The server disconnected before a response was received.
You can increase producer parameter `retries` and `retry.backoff.ms` to avoid this error.
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl.recordSendError(RecordCollectorImpl.java:138)
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl.access$500(RecordCollectorImpl.java:50)
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl$1.onCompletion(RecordCollectorImpl.java:201)
	at org.apache.kafka.clients.producer.KafkaProducer$InterceptorCallback.onCompletion(KafkaProducer.java:1318)
	at org.apache.kafka.clients.producer.internals.ProducerBatch.completeFutureAndFireCallbacks(ProducerBatch.java:230)
	at org.apache.kafka.clients.producer.internals.ProducerBatch.done(ProducerBatch.java:196)
	at org.apache.kafka.clients.producer.internals.Sender.failBatch(Sender.java:720)
	at org.apache.kafka.clients.producer.internals.Sender.failBatch(Sender.java:706)
	at org.apache.kafka.clients.producer.internals.Sender.completeBatch(Sender.java:663)
	at org.apache.kafka.clients.producer.internals.Sender.handleProduceResponse(Sender.java:570)
	at org.apache.kafka.clients.producer.internals.Sender.access$100(Sender.java:73)
	at org.apache.kafka.clients.producer.internals.Sender$1.onComplete(Sender.java:789)
	at org.apache.kafka.clients.ClientResponse.onComplete(ClientResponse.java:109)
	at org.apache.kafka.clients.NetworkClient.completeResponses(NetworkClient.java:561)
	at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:553)
	at org.apache.kafka.clients.producer.internals.Sender.runOnce(Sender.java:331)
	at org.apache.kafka.clients.producer.internals.Sender.run(Sender.java:238)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.kafka.common.errors.NetworkException: The server disconnected before a response was received.
Exception in thread "_confluent-ksql-default_query_CTAS_PTTY_14-9afa1248-415f-4b53-98c9-be4a37cd1aed-StreamThread-3" org.apache.kafka.streams.errors.StreamsException: task [1_0] Abort sending since an error caught with a previous record (key 63751|+|User_5|+|Page_16 value [B@13694672 timestamp 1562113551471) to topic _confluent-ksql-default_query_CTAS_PTTY_14-Aggregate-aggregate-changelog due to org.apache.kafka.common.errors.NetworkException: The server disconnected before a response was received.
You can increase producer parameter `retries` and `retry.backoff.ms` to avoid this error.
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl.recordSendError(RecordCollectorImpl.java:138)
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl.access$500(RecordCollectorImpl.java:50)
	at org.apache.kafka.streams.processor.internals.RecordCollectorImpl$1.onCompletion(RecordCollectorImpl.java:201)
	at org.apache.kafka.clients.producer.KafkaProducer$InterceptorCallback.onCompletion(KafkaProducer.java:1318)
	at org.apache.kafka.clients.producer.internals.ProducerBatch.completeFutureAndFireCallbacks(ProducerBatch.java:230)
	at org.apache.kafka.clients.producer.internals.ProducerBatch.done(ProducerBatch.java:196)
	at org.apache.kafka.clients.producer.internals.Sender.failBatch(Sender.java:720)
	at org.apache.kafka.clients.producer.internals.Sender.failBatch(Sender.java:706)
	at org.apache.kafka.clients.producer.internals.Sender.completeBatch(Sender.java:663)
	at org.apache.kafka.clients.producer.internals.Sender.handleProduceResponse(Sender.java:570)
	at org.apache.kafka.clients.producer.internals.Sender.access$100(Sender.java:73)
	at org.apache.kafka.clients.producer.internals.Sender$1.onComplete(Sender.java:789)
	at org.apache.kafka.clients.ClientResponse.onComplete(ClientResponse.java:109)
	at org.apache.kafka.clients.NetworkClient.completeResponses(NetworkClient.java:561)
	at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:553)
	at org.apache.kafka.clients.producer.internals.Sender.runOnce(Sender.java:331)
	at org.apache.kafka.clients.producer.internals.Sender.run(Sender.java:238)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.kafka.common.errors.NetworkException: The server disconnected before a response was received.
